{"version":3,"sources":["images/header/header-logo.svg","images/popup/sing-fail.svg","images/popup/sing-success.svg","components/ProtectedRoute.js","components/Login.js","components/Register.js","components/Header.js","contexts/currentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/InfoTooltip.js","utils/constants.js","utils/api.js","utils/auth.js","utils/utils.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","ProtectedRoute","Component","component","props","loggedIn","to","Login","onLogin","useState","email","password","message","data","setData","handleChange","e","target","name","value","className","onSubmit","preventDefault","id","required","type","onChange","placeholder","Register","onRegister","Header","pathname","useLocation","linkText","linkPath","alt","src","logo","onClick","onSignOut","CurrentUserContext","React","createContext","Card","currentUser","useContext","card","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onCardClick","evt","onCardDelete","link","onCardLike","length","Main","onEditAvatar","style","backgroundImage","avatar","onEditProfile","about","onAddPlace","cards","map","key","Footer","PopupWithForm","title","submitName","isOpen","onClose","children","action","noValidate","ImagePopup","EditProfilePopup","setName","description","setDescription","useEffect","onUpdateUser","reset","event","minLength","maxLength","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","InfoTooltip","status","singImg","singSuccess","singFail","singText","apiParams","_handleError","res","ok","json","console","log","Promise","reject","api","baseUrl","headers","this","_baseUrl","_headers","fetch","then","method","body","JSON","stringify","isntLike","putLike","deleteLike","all","getUserInfo","getCardsFromServer","authorization","BASE_URL","checkResponce","resolve","func","renderError","err","App","setCurrentUser","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isImageCardPopupOpen","setIsImageCardPopupOpen","isSubmitPopupOpen","setIsSubmitPopupOpen","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","selectedCard","setSelectedCard","setCards","setLoggedIn","setEmail","isRegisterSuccess","setIsRegisterSuccess","tooltipMessage","setTooltipMessage","history","useHistory","onOpenPopupInfoTooltip","closeAllPopups","tokenCheck","token","localStorage","getItem","auth","catch","_","initialUserInfo","error","initialCardList","cardList","push","Provider","removeItem","exact","path","changeLikeCardStatus","newCard","newCards","c","stopPropagation","removeCard","filter","setItem","changeUserInfo","changeAvatar","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.207382b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header-logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/sing-fail.4072126c.svg\";","module.exports = __webpack_public_path__ + \"static/media/sing-success.e38b395c.svg\";","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.loggedIn === true ? <Component {...props} /> : <Redirect to=\"./login\" />\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    message: ''\r\n  });\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value\r\n    });\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    let { email, password } = data;\r\n    onLogin(email, password);\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <section className='login section'>\r\n      <div className='popup__container'>\r\n        <form className='popup__form' onSubmit={handleSubmit}>\r\n          <h2 className='popup__title popup__title_type_elem'>Войти</h2>\r\n          <label className='popup__form-field'>\r\n            <input id='email' required name='email' type='email' value={data.email} onChange={handleChange} placeholder='Email' className='popup__input popup__input_type_elem' />\r\n          </label>\r\n          <label className='popup__form-field'>\r\n            <input id='password' required name='password' type='password' value={data.password} onChange={handleChange} placeholder='Пароль' className='popup__input popup__input_type_elem' />\r\n          </label>\r\n          <button type='submit' className='popup__btn-save popup__btn-save_type_elem'>Войти</button>\r\n        </form>\r\n        <Link to='./sign-up' className='popup__link'>Ещё не зарегистрированы? Регистрация</Link>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Register = ({ onRegister }) => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    message: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    let { email, password } = data;\r\n    onRegister(password, email);\r\n  }\r\n\r\n  return (\r\n    <section className='register section'>\r\n      <div className='popup__container'>\r\n        <form className='popup__form' onSubmit={handleSubmit}>\r\n          <h2 className='popup__title popup__title_type_elem'>Регистрация</h2>\r\n          <label className='popup__form-field'>\r\n            <input id='email' required name='email' type='email' value={data.email} onChange={handleChange} placeholder='Email' className='popup__input popup__input_type_elem' />\r\n          </label>\r\n          <label className='popup__form-field'>\r\n            <input id='password' required name='password' type='password' value={data.password} onChange={handleChange} placeholder='Пароль' className='popup__input popup__input_type_elem' />\r\n          </label>\r\n          <button type='submit' className='popup__btn-save popup__btn-save_type_elem'>Зарегистрироваться</button>\r\n        </form>\r\n        <Link to='./sign-in' className='popup__link'>Уже зарегистрированы? Войти</Link>\r\n      </div>\r\n    </section>\r\n  )\r\n\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport logo from '../images/header/header-logo.svg';\r\n\r\nfunction Header(props) {\r\n\r\n  const { pathname } = useLocation();\r\n  const linkText = `${pathname === '/sign-in' ? 'Регистрация' : 'Войти'}`;\r\n  const linkPath = `${pathname === '/sign-in' ? '/sign-up' : '/sign-in'}`;\r\n\r\n  return (\r\n    <header className='header page__header section'>\r\n      <img className='header__logo' alt='Логотип проекта Место' src={logo} />\r\n      <nav className='header__nav'>\r\n        <ul className='header__links'>\r\n          {props.loggedIn\r\n            ? (<>\r\n              <li className='header__links-item'><p className='header__email'>{props.email}</p></li>\r\n              <li className='header__links-item'><button onClick={props.onSignOut} className='header__btn'>Выйти</button></li>\r\n            </>)\r\n            :\r\n            (<li className='header__links-item'><Link to={linkPath} className='header__link'>{linkText}</Link></li>)\r\n          }\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/currentUserContext';\r\n\r\nconst Card = (props) => {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const card = props.card;\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = (\r\n    `element__btn-trash ${isOwn ? 'element__btn-trash_active' : ''}`\r\n  );\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = (\r\n    `element__btn-like ${isLiked ? 'element__btn-like_active' : ''}`\r\n  );\r\n\r\n\r\n  function handleClick() {\r\n    props.onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick(evt) {\r\n    props.onCardDelete(evt, card);\r\n  }\r\n\r\n\r\n  return (\r\n    < div className='element'>\r\n      <div className='element__container' onClick={handleClick}>\r\n        {isOwn && <button type='button' className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>}\r\n        <img className='element__img' src={card.link} alt={card.alt} />\r\n      </div>\r\n      <div className='element__info'>\r\n        <h2 className='element__title'>{card.name}</h2>\r\n        <div className='element__like-group'>\r\n          <button type='button' className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n          <p className='element__like-sum'>{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../contexts/currentUserContext';\r\n\r\nfunction Main(props) {\r\n  // Подписываемся на контекст TranslationContext\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content page__content\">\r\n      <section className=\"profile section\">\r\n        <div className=\"profile__main\">\r\n          <div className=\"profile__avatar-box\" onClick={props.onEditAvatar} style={{ backgroundImage: `url(${currentUser.avatar})` }} >\r\n\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__info-editor\">\r\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n              <button type=\"button\" className=\"profile__btn-edit\" onClick={props.onEditProfile}></button>\r\n            </div>\r\n            <p className=\"profile__status\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button type=\"button\" className=\"profile__btn-add\" onClick={props.onAddPlace}></button>\r\n      </section>\r\n\r\n      <section className=\"elements section\">\r\n        {props.cards.map((card) =>\r\n\r\n          <Card key={card._id} card={card} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>\r\n\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n\r\n  return (\r\n    <footer className=\"footer section page__footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm({ name, title, submitName, isOpen, onClose, onSubmit, children }) {\r\n  return (\r\n    <div className={`popup popup_name_${name}  ${isOpen && 'popup_opened'}`}>\r\n      <div className='popup__container popup__container_type_popup'>\r\n        <button type='button' className='popup__btn-close' onClick={onClose}></button>\r\n\r\n        <form name={`popup__form-${name}`} onSubmit={onSubmit} className='popup__form' action='#' noValidate>\r\n          <h2 className='popup__title'>{title}</h2>\r\n          {children}\r\n          <button type='submit' className='popup__btn-save popup__btn-save_type_popup'>{submitName}</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup({ name, isOpen, onClose, card }) {\r\n  return (\r\n    <div className={`popup popup_name_${name} ${isOpen && 'popup_opened'}`}>\r\n      <div className='popup__img-container'>\r\n        <button type='button' className='popup__btn-close' onClick={onClose}></button>\r\n\r\n        <img className='popup__img' src={card.link} alt={card.alt} />\r\n        <p className='popup__caption'>{card.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/currentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  // Подписка на контекст\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = React.useState(currentUser.name);\r\n  const [description, setDescription] = React.useState(currentUser.description);\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n    e.target.reset();\r\n  }\r\n\r\n\r\n  function handleNameChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n\r\n  function handleDescriptionChange(event) {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='profile'\r\n      title='Редактировать профиль'\r\n      submitName='Сохранить'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n\r\n      <label className='popup__form-field'>\r\n        <input id='name-input' name='popup__input-name' value={name || ''} onChange={handleNameChange} type='text' placeholder='Имя' className='popup__input popup__input_type_popup popup__input_type_name' required minLength='2' maxLength='40' />\r\n        <span id='name-input-error' className='popup__input-error'></span>\r\n      </label>\r\n      <label className='popup__form-field'>\r\n        <input id='status-input' name='popup__input-status' value={description || ''} onChange={handleDescriptionChange} type='text' placeholder='Вид деятельности' className='popup__input popup__input_type_popup popup__input_type_status' required minLength='2' maxLength='200' />\r\n        <span id='status-input-error' className='popup__input-error'></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const avatarRef = React.useRef(); // записываем объект, возвращаемый хуком, в переменную\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateAvatar({\r\n      avatar: avatarRef.current.value/* Значение инпута, полученное с помощью рефа */,\r\n    });\r\n    e.target.reset();\r\n  }\r\n\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='avatar'\r\n      title='Обновить аватар'\r\n      submitName='Сохранить'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className='popup__form-field'>\r\n        <input id='avatar-input' name='popup__input-avatar' ref={avatarRef} type='url' placeholder='Ссылка на картинку' className='popup__input popup__input_type_popup popup__input_type_avatar' required />\r\n        <span id='avatar-input-error' className='popup__input-error'></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [name, setName] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onAddPlace({\r\n      name: name,\r\n      link: link\r\n    });\r\n    e.target.reset();\r\n  }\r\n\r\n\r\n  function handleNameChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n\r\n  function handleLinkChange(event) {\r\n    setLink(event.target.value);\r\n  }\r\n\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='new-place'\r\n      title='Новое место'\r\n      submitName='Сохранить'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className='popup__form-field'>\r\n        <input id='new-place-name-input' name='popup__input-new-place-name' value={name || ''} onChange={handleNameChange} type='text' placeholder='Название' className='popup__input popup__input_type_new-place-name' required minLength='1' maxLength='30' />\r\n        <span id='new-place-name-input-error' className='popup__input-error'></span>\r\n      </label>\r\n      <label className='popup__form-field'>\r\n        <input id='new-place-img-input' name='popup__input-new-place-img' value={link || ''} onChange={handleLinkChange} type='url' placeholder='Ссылка на картинку' className='popup__input popup__input_type_new-place-img' required />\r\n        <span id='new-place-img-input-error' className='popup__input-error'></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport singFail from '../images/popup/sing-fail.svg';\r\nimport singSuccess from '../images/popup/sing-success.svg';\r\n\r\n\r\nfunction InfoTooltip({ name, isOpen, onClose, status, message}) {\r\n  const singImg = status ? singSuccess : singFail;\r\n  //const singText = status ? 'Вы успешно зарегистрировались!' :  'Что-то пошло не так! Попробуйте ещё раз.';\r\n  const singText = message;\r\n\r\n  return (\r\n    <div className={`popup popup_name_${name} ${isOpen && 'popup_opened'}`}>\r\n      <div className='popup__container popup__container_type_popup'>\r\n        <button type='button' className='popup__btn-close' onClick={onClose}></button>\r\n\r\n        <img className='popup__icon' src={singImg} alt={`Иконка с ответом сервера ${singText}`} />\r\n        <p className='popup__text-info-tooltip'>{singText}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;","// для Api\r\nconst apiParams = {\r\n  baseUrl: 'https://mesto.nomoreparties.co',\r\n  cohortId: 'cohort-15',\r\n  token: '8d0efc77-0d4b-4bf8-ae49-d7668927bf3c'\r\n};\r\n\r\n\r\nexport { apiParams };\r\n","import {\r\n  apiParams\r\n} from './constants.js';\r\n\r\nconst _handleError = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  else {\r\n    console.log(`Неудачный запрос fentch`);\r\n    return Promise.reject(res.status);\r\n  }\r\n}\r\n\r\nclass Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n\r\n  changeUserInfo(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify(\r\n        data\r\n      )\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  changeAvatar(data) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  getCardsFromServer() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  addNewCard({ name, link }) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link\r\n      })\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  removeCard(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  putLike(id) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers: this._headers\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  deleteLike(id) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  changeLikeCardStatus(id, isntLike) {\r\n    if (isntLike) {\r\n      return this.putLike(id);\r\n    }\r\n    else {\r\n\r\n      return this.deleteLike(id);\r\n    }\r\n  }\r\n\r\n  getAppInfo() {\r\n    return Promise.all([this.getUserInfo(), this.getCardsFromServer()]);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: apiParams.baseUrl + '/v1/' + apiParams.cohortId,\r\n  headers: {\r\n    authorization: apiParams.token,\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api;","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\n// const checkResponse = (response) => response.ok ? response.json() : Promise.reject(`Ошибка from auth: ${response}`);\r\n\r\n\r\nconst checkResponce = (res) => {\r\n  return new Promise((resolve, reject) => {\r\n    const func = res.status < 400 ? resolve : reject;\r\n    res.json().then((data) => {\r\n      func({ 'status': res.status, 'data': data })\r\n    })\r\n  })\r\n}\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ password, email })\r\n  })\r\n    .then(checkResponce)\r\n};\r\n\r\n\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ password, email })\r\n  })\r\n    .then(checkResponce)\r\n};\r\nexport const getContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  })\r\n    .then(checkResponce)\r\n}\r\n\r\n\r\n","export const renderLoading = (isLoading, btnSubmit, btnText) => {\r\n  if (isLoading) {\r\n    btnSubmit.innerText = btnText;\r\n  }\r\n  else {\r\n    btnSubmit.innerText = btnText;\r\n  }\r\n}\r\n\r\n\r\nexport const renderError = (err) => {\r\n  console.log(err);\r\n}","import React from 'react';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport { CurrentUserContext } from '../contexts/currentUserContext';\r\nimport api from '../utils/api.js';\r\nimport * as auth from '../utils/auth.js';\r\nimport { renderError } from '../utils/utils.js';\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\r\n  const [isImageCardPopupOpen, setIsImageCardPopupOpen] = React.useState(false);\r\n  const [isSubmitPopupOpen, setIsSubmitPopupOpen] = React.useState(false);\r\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  // --> авторизация\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n  const [email, setEmail] = React.useState('');\r\n  const [isRegisterSuccess, setIsRegisterSuccess] = React.useState(false);\r\n  const [tooltipMessage, setTooltipMessage] = React.useState('');\r\n\r\n  const history = useHistory();\r\n  // <-- авторизация\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard({ ...card });\r\n    setIsImageCardPopupOpen(true);\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\r\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    })\r\n      .catch((err) => {\r\n        renderError(`Ошибка: ${err}`);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete(event, card) {\r\n    event.stopPropagation();\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.removeCard(card._id).then(() => {\r\n      // Создаем копию массива, исключив из него удалённую карточку\r\n      const newCards = cards.filter((c) => c._id !== card._id);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    })\r\n      .catch((err) => {\r\n        renderError(`Ошибка: ${err}`);\r\n      });\r\n  }\r\n\r\n  function handleUpdateUser({ name, about }) {\r\n    api.changeUserInfo({ name, about }).then(data => {\r\n      setCurrentUser(data);\r\n      closeAllPopups();\r\n    })\r\n      .catch((err) => {\r\n        renderError(`Ошибка: ${err}`);\r\n      });\r\n\r\n  }\r\n\r\n\r\n  function handleUpdateAvatar({ avatar }) {\r\n    api.changeAvatar({ avatar }).then(data => {\r\n      setCurrentUser(data);\r\n      closeAllPopups();\r\n    })\r\n      .catch((err) => {\r\n        renderError(`Ошибка: ${err}`);\r\n      });\r\n  }\r\n\r\n\r\n  function handleAddPlaceSubmit({ name, link }) {\r\n    api.addNewCard({ name, link }).then((newCard) => {\r\n\r\n      // Обновляем стейт карточек\r\n      setCards([newCard, ...cards]);\r\n      closeAllPopups();\r\n    })\r\n      .catch((err) => {\r\n        renderError(`Ошибка: ${err}`);\r\n      });\r\n  }\r\n\r\n  function onOpenPopupInfoTooltip(status, message) {\r\n    setIsRegisterSuccess(status);\r\n    setTooltipMessage(message);\r\n    setIsInfoTooltipPopupOpen(true);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setIsImageCardPopupOpen(false);\r\n    setIsSubmitPopupOpen(false);\r\n    setIsInfoTooltipPopupOpen(false);\r\n\r\n    setSelectedCard({});\r\n  }\r\n\r\n  // --> авторизация\r\n\r\n  const onLogin = (email, password) => {\r\n    // авторизация\r\n    auth.authorize(email, password)\r\n      .then((res) => {\r\n        if (res.data.token) {\r\n          localStorage.setItem('token', res.data.token);\r\n          setEmail(email);\r\n          setLoggedIn(true);\r\n        } else {\r\n          return new Promise().reject();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.data) {\r\n          onOpenPopupInfoTooltip(false, err.data.message);\r\n        } else {\r\n          onOpenPopupInfoTooltip(false, 'Что-то пошло не так');\r\n        }\r\n      });\r\n  }\r\n\r\n  const onRegister = (password, email) => {\r\n    auth.register(password, email)\r\n      .then((res) => {\r\n        if (res.data.data.email) {\r\n          history.push('./sign-in');\r\n          onOpenPopupInfoTooltip(true, 'Вы успешно зарегистрировались!');\r\n\r\n        } else {\r\n          return new Promise().reject();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        if (err.data) {\r\n          if (err.data.message) {\r\n            onOpenPopupInfoTooltip(false, err.data.message);\r\n          } else {\r\n            onOpenPopupInfoTooltip(false, err.data.error);\r\n          }\r\n        } else {\r\n          onOpenPopupInfoTooltip(false, 'Что-то пошло не так');\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  const tokenCheck = () => {\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (token) {\r\n      auth.getContent(token).then((res) => {\r\n        if (res.data.data.email) {\r\n          setEmail(res.data.data.email);\r\n          setLoggedIn(true);\r\n        } else {\r\n          return new Promise().reject();\r\n        }\r\n\r\n      })\r\n        .catch(_ => onOpenPopupInfoTooltip(false, 'Что-то пошло не так! Проблемы с токеном.'));\r\n    }\r\n  }\r\n\r\n\r\n  const onSignOut = () => {\r\n    // выход из профиля\r\n    localStorage.removeItem('token');\r\n    setEmail('');\r\n    setLoggedIn(false);\r\n  }\r\n  // <-- авторизация\r\n\r\n  React.useEffect(() => {\r\n    api.getUserInfo().then((initialUserInfo) => {\r\n\r\n      setCurrentUser(initialUserInfo);\r\n    }\r\n    )\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    api.getCardsFromServer().then((initialCardList) => {\r\n      const cardList = initialCardList.map(card => card);\r\n      setCards(cardList);\r\n    })\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  // --> авторизация\r\n  React.useEffect(_ => {\r\n    tokenCheck()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  React.useEffect(_ => {\r\n    if (loggedIn) {\r\n      history.push('/');\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [loggedIn]);\r\n  // <-- авторизация\r\n\r\n  return (\r\n    <>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <div className='page'>\r\n          <div className='page__container'>\r\n            <Header\r\n              loggedIn={loggedIn}\r\n              email={email}\r\n              onSignOut={onSignOut}\r\n            />\r\n            <Switch>\r\n              <ProtectedRoute exact path=\"/\"\r\n                loggedIn={loggedIn}\r\n                component={Main}\r\n                cards={cards}\r\n                onEditAvatar={handleEditAvatarClick}\r\n                onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                onCardClick={handleCardClick}\r\n                onCardLike={handleCardLike}\r\n                onCardDelete={handleCardDelete} />\r\n              <Route path=\"/sign-in\">\r\n                <div className=\"loginContainer\">\r\n                  <Login onLogin={onLogin} />\r\n                </div>\r\n              </Route>\r\n              <Route path=\"/sign-up\">\r\n                <div className=\"registerContainer\">\r\n                  <Register onRegister={onRegister} />\r\n                </div>\r\n              </Route>\r\n              <Route>\r\n                {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\r\n              </Route>\r\n            </Switch>\r\n            <Footer />\r\n\r\n            <EditProfilePopup\r\n              isOpen={isEditProfilePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onUpdateUser={handleUpdateUser}\r\n            />\r\n\r\n\r\n            <EditAvatarPopup\r\n              isOpen={isEditAvatarPopupOpen}\r\n              onClose={closeAllPopups}\r\n              onUpdateAvatar={handleUpdateAvatar}\r\n            />\r\n\r\n            <AddPlacePopup\r\n              isOpen={isAddPlacePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onAddPlace={handleAddPlaceSubmit}\r\n            />\r\n\r\n            <PopupWithForm\r\n              name='delete-submit'\r\n              title='Вы уверены?'\r\n              submitName='Да'\r\n              isOpen={isSubmitPopupOpen}\r\n              onClose={closeAllPopups}>\r\n            </PopupWithForm>\r\n\r\n            <ImagePopup\r\n              name='img'\r\n              isOpen={isImageCardPopupOpen}\r\n              onClose={closeAllPopups}\r\n              card={selectedCard}>\r\n            </ImagePopup>\r\n\r\n            <InfoTooltip\r\n              name='infoToolLip'\r\n              isOpen={isInfoTooltipPopupOpen}\r\n              onClose={closeAllPopups}\r\n              status={isRegisterSuccess}\r\n              message={tooltipMessage}\r\n            >\r\n            </InfoTooltip>\r\n          </div>\r\n        </div>\r\n      </CurrentUserContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}